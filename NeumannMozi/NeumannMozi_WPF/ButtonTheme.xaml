<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
                    xmlns:local="clr-namespace:NeumannMozi_WPF">
    

    <!-- Window Button Theme -->
    <Style x:Key="WindowTheme" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="25"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>

            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#BFBFBF"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Restore down / Maximize Button theme -->
    <Style x:Key="ChangeWindowState" TargetType="Button" BasedOn="{StaticResource WindowTheme}">
        <Setter Property="Content" Value="{iconPacks:Material Kind=WindowRestore, Height=15, Width=15}"/>
        <Style.Triggers>
            <DataTrigger 
            Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType=Window}}"
            Value="Maximized">
                <Setter Property="Content" Value="{iconPacks:Material Kind=WindowRestore, Height=15, Width=15}"/>
            </DataTrigger>
            <DataTrigger 
            Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType=Window}}"
            Value="Normal">
                <Setter Property="Content" Value="{iconPacks:Material Kind=WindowMaximize, Height=15, Width=15}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!-- Rounded Red Button Theme -->
    <Style  x:Key="RoundedRedButtonTheme" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Background" Value="#bd1222"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}"
                            CornerRadius="20">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#8c0d1a"/>
                <Setter Property="Cursor" Value="Hand"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!-- Red text Button Theme -->
    <Style  x:Key="RedTextButtonTheme" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="#bd1222"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="FontWeight" Value="Bold"/>
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="#8c0d1a"/>
                <Setter Property="Cursor" Value="Hand"/>
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>